/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.compomics.pladipus.view.dialogs.run;

import com.compomics.pladipus.core.control.distribution.communication.interpreter.impl.XMLTemplateInterpreter;
import com.compomics.pladipus.core.control.distribution.service.database.dao.impl.RunDAO;
import com.compomics.pladipus.core.control.runtime.steploader.StepLoadingException;
import com.compomics.pladipus.core.model.processing.templates.PladipusProcessingTemplate;
import com.compomics.pladipus.view.panels.impl.UserPanel;
import com.compomics.util.gui.waiting.waitinghandlers.ProgressDialogX;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author Kenneth Verheggen
 */
public class RunImportDialog extends javax.swing.JDialog {

    /**
     * the template file chooser
     */
    private final JFileChooser templateChooser = new JFileChooser();
    /**
     * the config file chooser
     */
    private final JFileChooser configChooser = new JFileChooser();
    /**
     * the current user
     */
    private String user;
    /**
     * the progressDialog
     */
    private ProgressDialogX progressDialog;
    /**
     * the parent user panel
     */
    private UserPanel userPanel;

    /**
     * Creates new form RunCreationDialog
     */
    public RunImportDialog(java.awt.Frame parent, UserPanel userPanel, boolean modal) {
        super(parent, modal);
        this.userPanel = userPanel;
        setLocationRelativeTo(parent);
        setTitle("Create a new run");

        // try to set the look and feel
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            // ignore error, use default look and feel
        }

        initComponents();
        slPriority.setValue(5);

        initFileChoosers();
    }

    public void setUser(String user) {
        this.user = user;
    }

    private void initFileChoosers() {
        //init the filechoosers
        templateChooser.setFileFilter(new FileNameExtensionFilter("xml files (*.xml)", "xml"));
        templateChooser.setDialogTitle("Select the template XML");
        configChooser.setFileFilter(new FileNameExtensionFilter("tsv files (*.tsv)", "tsv"));
        configChooser.setDialogTitle("Select the configuration tsv");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        lblTemplate = new javax.swing.JLabel();
        lblConfig = new javax.swing.JLabel();
        slPriority = new javax.swing.JSlider();
        lblPriority = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        tfTemplate = new javax.swing.JTextField();
        tfConfig = new javax.swing.JTextField();
        btnTemplateChooser = new javax.swing.JButton();
        btnConfigChooser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));

        lblTemplate.setText("Run Template File");

        lblConfig.setText("Run Configuration File");

        slPriority.setBackground(new java.awt.Color(255, 255, 255));
        slPriority.setForeground(new java.awt.Color(102, 204, 255));
        slPriority.setMaximum(9);
        slPriority.setMinimum(1);
        slPriority.setMinorTickSpacing(1);
        slPriority.setPaintLabels(true);
        slPriority.setPaintTicks(true);
        slPriority.setSnapToTicks(true);

        lblPriority.setText("Run Priority");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnTemplateChooser.setText("...");
        btnTemplateChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTemplateChooserActionPerformed(evt);
            }
        });

        btnConfigChooser.setText("...");
        btnConfigChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTemplate)
                            .addComponent(lblConfig)
                            .addComponent(lblPriority))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(tfConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnConfigChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTemplateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCreate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancel))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(slPriority, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26)))
                .addContainerGap())
        );

        pnlMainLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnConfigChooser, btnTemplateChooser});

        pnlMainLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblConfig, lblPriority, lblTemplate});

        pnlMainLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfConfig, tfTemplate});

        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemplate)
                    .addComponent(tfTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTemplateChooser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConfig)
                    .addComponent(tfConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfigChooser))
                .addGap(18, 18, 18)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPriority))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTemplateChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTemplateChooserActionPerformed
        handleFileChooserButton(evt);
    }//GEN-LAST:event_btnTemplateChooserActionPerformed

    private void btnConfigChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigChooserActionPerformed
        handleFileChooserButton(evt);
    }//GEN-LAST:event_btnConfigChooserActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        PladipusProcessingTemplate processingTemplate = null;
        boolean allowCreation = true;
        //check if the files exist
        File template = new File(tfTemplate.getText());
        if (!template.exists()) {
            allowCreation = false;
        } else {
            //check if the templatefile is fit for the logged in user

            try {
                processingTemplate = XMLTemplateInterpreter.getInstance().convertXMLtoTemplate(template);
                if (!processingTemplate.getUser().equalsIgnoreCase(user)) {
                    processingTemplate.setUser(user);
                }
            } catch (IOException | StepLoadingException | ParserConfigurationException | SAXException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,
                        ex.getMessage(),
                        "Template Error",
                        JOptionPane.ERROR_MESSAGE);
                allowCreation = false;
            }
        }
        File config = new File(tfConfig.getText());
        if (!config.exists()) {
            allowCreation = false;
        }
        //check the priority
        slPriority.getValue();
        if (processingTemplate != null && allowCreation) {
            executeUpload(processingTemplate, config);
            this.dispose();
        }


    }//GEN-LAST:event_btnCreateActionPerformed

    private void executeUpload(PladipusProcessingTemplate processingTemplate, File config) {
        progressDialog = new ProgressDialogX(true);
        progressDialog.setPrimaryProgressCounterIndeterminate(true);
        progressDialog.setTitle("Adding jobs to run. Please Wait...");

        new Thread(new Runnable() {
            public void run() {
                try {
                    progressDialog.setVisible(true);
                } catch (IndexOutOfBoundsException e) {
                    // ignore
                }
            }
        }, "ProgressDialog").start();

        new Thread("SaveThread") {
            @Override
            public void run() {
                try {
                    XMLTemplateInterpreter xmlInterpreter = XMLTemplateInterpreter.getInstance();
                    //store in the database
                    LinkedList<HashMap<String, String>> readLocalProcessingParameters = xmlInterpreter.readLocalProcessingParameters(processingTemplate, config);
                    RunDAO rInstance = RunDAO.getInstance();
                    int runID = rInstance.createRun(processingTemplate);
                    rInstance.addToRun(runID, readLocalProcessingParameters);
                    progressDialog.setRunFinished();
                    try {
                        userPanel.updateRunTable();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(RunImportDialog.this,
                                ex.getMessage(),
                                "Run Error",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    try {
                        userPanel.updateProcessTable();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(RunImportDialog.this,
                                ex.getMessage(),
                                "Run Error",
                                JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception e) {
                    progressDialog.setRunFinished();
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null,
                            "Could not create run" + System.lineSeparator() + e,
                            "Run Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }.start();
    }


    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void handleFileChooserButton(java.awt.event.ActionEvent evt) {
        JFileChooser fc = null;
        JTextField tf = null;
        if (evt.getSource() == btnTemplateChooser) {
            fc = templateChooser;
            tf = tfTemplate;
        } else if (evt.getSource() == btnConfigChooser) {
            fc = configChooser;
            tf = tfConfig;
        }
        if (fc != null && tf != null) {
            int returnVal = fc.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                tf.setText(file.getAbsolutePath());
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfigChooser;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnTemplateChooser;
    private javax.swing.JLabel lblConfig;
    private javax.swing.JLabel lblPriority;
    private javax.swing.JLabel lblTemplate;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JSlider slPriority;
    private javax.swing.JTextField tfConfig;
    private javax.swing.JTextField tfTemplate;
    // End of variables declaration//GEN-END:variables
}
