package com.compomics.pladipus.view.dialogs;

import com.compomics.pladipus.core.control.distribution.PladipusTrafficManager;
import com.compomics.pladipus.core.control.distribution.service.UserService;
import com.compomics.pladipus.core.model.properties.NetworkProperties;
import com.compomics.pladipus.view.dialogs.management.ConfigurationDialog;
import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Kenneth Verheggen
 */
public class LoginDialog extends javax.swing.JDialog {

    /**
     * the authorisation check
     */
    private boolean authorised;
    /**
     * the current user
     */
    private String user;
    /**
     * the traffic manager instance
     */
    private PladipusTrafficManager trafficManager = PladipusTrafficManager.getInstance();
    /**
     * the verified settings check
     */
    private boolean settingsVerified;
    /**
     * the parenting mainGUI frame
     */
    private final Frame parentFrame;

    /**
     * Creates new form LoginDialog
     *
     * @param parent
     * @param modal
     */
    public LoginDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parentFrame = parent;
        initComponents();
        getRootPane().setDefaultButton(btnLogin);

        // try to set the look and feel
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            // ignore error, use default look and feel
        }

        setTitle("Welcome to Pladipus");
        ImageIcon image = new ImageIcon(
                getClass().getResource(
                        "/images/pladipus_icon.gif"));
        lbLogo.setText("");
        lbLogo.setIcon(image);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                System.exit(0);
            }
        });
        //before allowing the user to do anything, notify them that on first run the settings need to be completed
        //check if this is the firt time pladipus is run...
        File firstRunFile = new File(System.getProperty("user.home") + "/.compomics/pladipus/config");
        if (!firstRunFile.exists()) {
            NetworkProperties.getInstance();
            JOptionPane.showMessageDialog(this,
                    "Hello! It seems this is the first time you are running pladipus." + System.lineSeparator()
                    + "Some settings are required before the software can be operational" + System.lineSeparator()
                    + "You can find these in the following folder : " + System.lineSeparator()
                    + System.lineSeparator()
                    + firstRunFile.getAbsolutePath() + System.lineSeparator()
                    + System.lineSeparator()
                    + "Hope to see you soon !",
                    "Before you get started...",
                    JOptionPane.WARNING_MESSAGE, image);
            System.exit(0);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        lblUser = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        pfPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        lbLogo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setResizable(false);

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));

        lblUser.setText("Username");

        lblPass.setText("Password");

        tfUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUsernameActionPerformed(evt);
            }
        });

        pfPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lbLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLogo.setText("LOGO PLACEHOLDER");

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUser)
                    .addComponent(lblPass))
                .addGap(18, 18, 18)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(pfPassword)
                    .addComponent(tfUsername))
                .addGap(30, 30, 30))
        );

        pnlMainLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblPass, lblUser});

        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUser)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPass)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogin)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUsernameActionPerformed

    }//GEN-LAST:event_tfUsernameActionPerformed

    private boolean verifySettings() {
        NetworkProperties instance = NetworkProperties.getInstance();
        try {
            trafficManager.isSystemOnline();
            settingsVerified = true;
        } catch (Exception ex) {
            try {
                int reply = JOptionPane.showConfirmDialog(null, ex.getMessage() + System.lineSeparator() + "Do you want to review the network settings and retry?", "Retry?", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    instance.reload();
                    ConfigurationDialog settingsDialog = new ConfigurationDialog(parentFrame, true);
                    settingsDialog.setProperties(instance);
                    settingsDialog.setVisible(true);
                }
            } catch (IOException ex2) {
                //ignore for now
            }
            settingsVerified = false;
        }
        return settingsVerified;
    }

    private void login() {
        UserService uService = UserService.getInstance();
        try {
            if (!uService.userExists(tfUsername.getText())) {
                JOptionPane.showMessageDialog(this,
                        "User not found.",
                        "Login Error",
                        JOptionPane.WARNING_MESSAGE);
            } else if (settingsVerified && (uService.verifyUser(tfUsername.getText(), new String(pfPassword.getPassword())))) {
                this.user = tfUsername.getText();
                authorised = true;
                this.setVisible(!authorised);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Incorrect authorisation.",
                        "Login Error",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException | UnsupportedEncodingException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Could not contact the login server.",
                    "Login Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        if (verifySettings()) {
            login();
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    public boolean isAuthorised() {
        return authorised;
    }

    public String getUser() {
        return user;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables
}
