/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.compomics.pladipus.view;

import java.awt.CardLayout;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;

/**
 *
 * @author Kenneth Verheggen
 */
public class InstallerGUI extends javax.swing.JFrame {

    /**
     * the current position of the cards
     */
    private int cursor = 1;
    /**
     * the collection of card names that can be displayed
     */
    private HashMap<Integer, String> cards = new HashMap<>();
    /**
     * the disclaimer dialog
     */
    private Disclaimer disclaimer;

    /**
     * Creates new form InstallerGUI
     */
    public InstallerGUI() {
        showDisclaimer();
        initComponents();
        cards.put(1, "mySQLCard");
        cards.put(2, "activeMQCard");
        cards.put(3, "pladipusCard");

        epDescription.setEditorKit(JEditorPane.createEditorKitForContentType("text/html"));
        epDescription.setEditable(false);
        epDescription.addHyperlinkListener(new HyperlinkListener() {
            @Override
            public void hyperlinkUpdate(HyperlinkEvent e) {
                if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                    if (Desktop.isDesktopSupported()) {
                        try {
                            Desktop.getDesktop().browse(e.getURL().toURI());
                        } catch (IOException | URISyntaxException ex) {
                            Logger.getLogger(InstallerGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        });

        setDescriptingText();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        btnNext = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        pnlCards = new javax.swing.JPanel();
        pnlMySQL = new com.compomics.pladipus.view.MySQLPanel();
        pnlActiveMQ = new com.compomics.pladipus.view.ActiveMQPanel();
        pnlPladipus = new com.compomics.pladipus.view.PladipusPanel();
        pnlDescription = new javax.swing.JPanel();
        spnlDescription = new javax.swing.JScrollPane();
        epDescription = new javax.swing.JEditorPane();
        btnHelp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));

        btnNext.setBackground(new java.awt.Color(255, 255, 255));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(255, 255, 255));
        btnPrev.setText("Previous");
        btnPrev.setEnabled(false);
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        pnlCards.setBackground(new java.awt.Color(255, 255, 255));
        pnlCards.setLayout(new java.awt.CardLayout());
        pnlCards.add(pnlMySQL, "mySQLCard");
        pnlCards.add(pnlActiveMQ, "activeMQCard");
        pnlCards.add(pnlPladipus, "pladipusCard");

        pnlDescription.setBackground(new java.awt.Color(255, 255, 255));

        spnlDescription.setBackground(new java.awt.Color(255, 255, 255));
        spnlDescription.setBorder(null);

        epDescription.setEditable(false);
        epDescription.setBorder(null);
        spnlDescription.setViewportView(epDescription);

        javax.swing.GroupLayout pnlDescriptionLayout = new javax.swing.GroupLayout(pnlDescription);
        pnlDescription.setLayout(pnlDescriptionLayout);
        pnlDescriptionLayout.setHorizontalGroup(
            pnlDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spnlDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
        );
        pnlDescriptionLayout.setVerticalGroup(
            pnlDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spnlDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        btnHelp.setText("Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHelp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(btnPrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext))
                    .addComponent(pnlCards, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlMainLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {pnlCards, pnlDescription});

        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCards, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNext)
                        .addComponent(btnPrev))
                    .addComponent(btnHelp))
                .addContainerGap())
        );

        pnlMainLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {pnlCards, pnlDescription});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showCard() {
        CardLayout card = (CardLayout) pnlCards.getLayout();
        String cardName = cards.get(cursor);
        card.show(pnlCards, cardName);
        setDescriptingText();
    }

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (cursor == cards.size()) {
            //then it's done
            System.exit(0);
        }
        cursor++;
        cursor = Math.min(cards.size(), cursor);
        showCard();
        if (cursor == cards.size()) {
            btnNext.setText("Finish");
        }
        btnPrev.setEnabled(true);
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        cursor--;
        cursor = Math.max(1, cursor);
        showCard();
        if (cursor == 1) {
            btnPrev.setEnabled(false);
        }
        btnNext.setText("Next");
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
        if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
            try {
                String cardName = cards.get(cursor);
                URL helpPage = new URL("http://compomics.github.io/projects/pladipus.html");
                switch (cardName) {
                    case "mySQLCard":
                        helpPage = new URL("http://compomics.github.io/pladipus/wiki/installingmysql.html");
                        break;
                    case "activeMQCard":
                        helpPage = new URL("http://compomics.github.io/pladipus/wiki/installingactivemq.html");
                        break;
                    case "pladipusCard":
                        helpPage = new URL("http://compomics.github.io/pladipus/wiki/installingpladipus.html");
                        break;
                }
                desktop.browse(helpPage.toURI());
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else{
            System.out.println("Please consult the wiki at http://compomics.github.io/projects/pladipus.html");
        }
    }//GEN-LAST:event_btnHelpActionPerformed

    private void showDisclaimer() {
        try {
            if (disclaimer == null) {
                disclaimer = new Disclaimer(this, true);
            }
            disclaimer.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(InstallerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InstallerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InstallerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InstallerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InstallerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InstallerGUI installerGUI = new InstallerGUI();
                installerGUI.setLocationRelativeTo(null);
                installerGUI.setTitle("Pladipus Installation");
                installerGUI.setVisible(true);
            }
        });
    }

    private void setDescriptingText() {
        epDescription.setContentType("text/html");//set content as html

        switch (cursor) {
            case 1:
                epDescription.setText("Pladipus requires a mySQL database in order to keep track of tasks and their states. Using these settings you can easily connect and automatically import the Pladipus database scheme"
                        + "<br><br>If there is no mySQL service reachable, click <a href='https://dev.mysql.com/doc/'>here</a> for a tutorial on how to set one up. "
                );
                break;
            case 2:
                epDescription.setText("Pladipus requires a running <a href='http://activemq.apache.org/'>ActiveMQ</a> server in order to distribute tasks and system updates. Using these settings you can easily create a connection."
                        + "<br><br>If no ActiveMQ service is reachable, please click the install button to automatically set up a prepackaged version."
                );
                break;
            case 3:
                epDescription.setText(
                        "In order to submit and manage new tasks, you need a<strong> registered Pladipus account</strong>"
                        + "<br>"
                        + "<br>"
                        + "Pladipus can be installed as : <br>"
                        + "<ul>"
                        + "<li>Console-mode (manage tasks using a graphical user interface)</li> "
                        + "<li>Worker-mode, (execute tasks on this machine)</li>"
                        + "</ul>"
                        + "<br>"
                        + "<br>It is also possible to <strong>automatically install <a href='http://www.ncbi.nlm.nih.gov/pubmed/21337703'>SearchGUI</a> and <a href='http://www.ncbi.nlm.nih.gov/pubmed/25574629'>PeptideShaker</a></strong> if you want to set up a demo-worker. "
                );
                break;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JEditorPane epDescription;
    private com.compomics.pladipus.view.ActiveMQPanel pnlActiveMQ;
    private javax.swing.JPanel pnlCards;
    private javax.swing.JPanel pnlDescription;
    private javax.swing.JPanel pnlMain;
    private com.compomics.pladipus.view.MySQLPanel pnlMySQL;
    private com.compomics.pladipus.view.PladipusPanel pnlPladipus;
    private javax.swing.JScrollPane spnlDescription;
    // End of variables declaration//GEN-END:variables
}
